{"version":3,"file":"ng2-dropdown.bundle.js","sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 08fa202678d953c1f63d","webpack:///src/index.ts","webpack:///src/modules/ng2-dropdown.module.ts","webpack:///src/modules/components/dropdown/ng2-dropdown.ts","webpack:///external \"@angular/core\"","webpack:///src/modules/components/button/ng2-dropdown-button.ts","webpack:///./src/modules/components/button/style.scss","webpack:///./src/modules/components/button/template.html","webpack:///src/modules/components/menu/ng2-dropdown-menu.ts","webpack:///src/modules/components/menu/actions.ts","webpack:///src/modules/components/menu-item/ng2-menu-item.ts","webpack:///src/modules/services/dropdown-state.service.ts","webpack:///src/modules/services/ng2-dropdown-state.ts","webpack:///./src/modules/components/menu-item/style.scss","webpack:///./src/modules/components/menu-item/template.html","webpack:///./src/modules/components/menu/style.scss","webpack:///./src/modules/components/menu/template.html","webpack:///./src/modules/components/dropdown/style.scss","webpack:///./src/modules/components/dropdown/template.html","webpack:///external \"@angular/common\""],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@angular/core\"), require(\"@angular/common\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"@angular/core\", \"@angular/common\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ng2-dropdown\"] = factory(require(\"@angular/core\"), require(\"@angular/common\"));\n\telse\n\t\troot[\"ng2-dropdown\"] = factory(root[\"@angular/core\"], root[\"@angular/common\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_18__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 08fa202678d953c1f63d","export * from './modules/ng2-dropdown.module';\n\n\n\n// WEBPACK FOOTER //\n// src/index.ts","import { Ng2Dropdown } from './components/dropdown/ng2-dropdown';\nimport { Ng2DropdownMenu } from './components/menu/ng2-dropdown-menu';\nimport { Ng2DropdownButton } from './components/button/ng2-dropdown-button';\nimport { Ng2MenuItem } from './components/menu-item/ng2-menu-item';\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DropdownStateService } from './services/dropdown-state.service';\n\n@NgModule({\n    exports: [\n        Ng2MenuItem,\n        Ng2DropdownButton,\n        Ng2DropdownMenu,\n        Ng2Dropdown\n    ],\n    declarations: [\n        Ng2Dropdown,\n        Ng2MenuItem,\n        Ng2DropdownButton,\n        Ng2DropdownMenu,\n    ],\n    imports: [ CommonModule ]\n})\nexport class Ng2DropdownModule {}\n\nexport {\n    Ng2Dropdown,\n    Ng2DropdownMenu,\n    Ng2MenuItem,\n    Ng2DropdownButton,\n    DropdownStateService\n}\n\n\n\n// WEBPACK FOOTER //\n// src/modules/ng2-dropdown.module.ts","import {\n    HostListener,\n    Component,\n    ContentChild,\n    Output,\n    EventEmitter,\n    Input\n} from '@angular/core';\n\nimport { Ng2DropdownButton } from '../button/ng2-dropdown-button';\nimport { Ng2DropdownMenu } from '../menu/ng2-dropdown-menu';\nimport { DropdownStateService } from '../../services/dropdown-state.service';\n\n@Component({\n    selector: 'ng2-dropdown',\n    styleUrls: [ './style.scss' ],\n    templateUrl: './template.html',\n    providers: [ DropdownStateService ]\n})\nexport class Ng2Dropdown {\n    // get children components\n    @ContentChild(Ng2DropdownButton) public button: Ng2DropdownButton;\n    @ContentChild(Ng2DropdownMenu) public menu: Ng2DropdownMenu;\n\n    @Input() public dynamicUpdate: boolean = true;\n\n    // outputs\n    @Output() public onItemClicked: EventEmitter<string> = new EventEmitter<string>();\n    @Output() public onItemSelected: EventEmitter<string> = new EventEmitter<string>();\n    @Output() public onShow: EventEmitter<Ng2Dropdown> = new EventEmitter<Ng2Dropdown>();\n    @Output() public onHide: EventEmitter<Ng2Dropdown> = new EventEmitter<Ng2Dropdown>();\n\n    constructor(private state: DropdownStateService) {}\n\n    /**\n     * @name toggleMenu\n     * @desc toggles menu visibility\n     */\n    public toggleMenu(position = this.button.getPosition()): void {\n        this.state.menuState.isVisible ? this.hide() : this.show(position);\n    }\n\n    /**\n     * - hides dropdown\n     * @name hide\n     */\n    public hide(): void {\n        this.menu.hide();\n        this.onHide.emit(this);\n    }\n\n    /**\n     * - shows dropdown\n     * @name show\n     * @param position\n     */\n    private show(position = this.button.getPosition()): void {\n        this.menu.show();\n\n        // update menu position based on its button's\n        this.menu.updatePosition(position);\n        this.onShow.emit(this);\n    }\n\n    /**\n     * @name scrollListener\n     */\n    @HostListener('window:scroll')\n    private scrollListener() {\n        if (this.state.menuState.isVisible && this.button && this.dynamicUpdate) {\n            this.menu.updatePosition(this.button.getPosition());\n        }\n    }\n\n    ngOnInit() {\n        this.state.dropdownState.onItemClicked.subscribe(item => {\n            this.onItemClicked.emit(item);\n\n            if (item.preventClose) {\n                return;\n            }\n\n            this.hide.call(this);\n        });\n\n        if (this.button) {\n            this.button.onMenuToggled.subscribe(() => {\n                this.toggleMenu();\n            });\n        }\n\n        this.state.dropdownState.onItemSelected.subscribe(item => this.onItemSelected.emit(item));\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/modules/components/dropdown/ng2-dropdown.ts","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@angular/core\"\n// module id = 3\n// module chunks = 0 1","import {\n    Component,\n    Output,\n    Input,\n    EventEmitter,\n    ElementRef\n} from '@angular/core';\n\n@Component({\n    selector: 'ng2-dropdown-button',\n    styleUrls: [ './style.scss' ],\n    templateUrl: './template.html'\n})\nexport class Ng2DropdownButton {\n    @Output() public onMenuToggled: EventEmitter<boolean> = new EventEmitter<boolean>();\n    @Input() public showCaret: boolean = true;\n\n    constructor(private element: ElementRef) {}\n\n    /**\n     * @name toggleMenu\n     * @desc emits event to toggle menu\n     */\n    public toggleMenu(): void {\n        this.onMenuToggled.emit(true);\n    }\n\n    /**\n     * @name getPosition\n     * @desc returns position of the button\n     * @returns {ClientRect}\n     */\n    public getPosition(): ClientRect {\n      return this.element.nativeElement.getBoundingClientRect();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/modules/components/button/ng2-dropdown-button.ts","module.exports = \".ng2-dropdown-button {\\n  font-family: \\\"Roboto\\\", \\\"Helvetica Neue\\\", Helvetica, Arial;\\n  background: #fff;\\n  padding: 0.45rem 0.25rem;\\n  font-size: 14px;\\n  letter-spacing: 0.08rem;\\n  color: #444;\\n  outline: 0;\\n  cursor: pointer;\\n  font-weight: 400;\\n  border: none;\\n  border-bottom: 1px solid #efefef;\\n  text-align: left;\\n  min-width: 100px;\\n  width: 100%;\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: row;\\n          flex-direction: row;\\n  max-width: 150px; }\\n\\n.ng2-dropdown-button:hover {\\n  color: #222; }\\n\\n.ng2-dropdown-button:active, .ng2-dropdown-button:focus {\\n  color: #222;\\n  border-bottom: 2px solid #2196F3; }\\n\\n.ng2-dropdown-button__label {\\n  -webkit-box-flex: 1;\\n      -ms-flex: 1 1 95%;\\n          flex: 1 1 95%; }\\n\\n.ng2-dropdown-button__caret {\\n  width: 12px;\\n  height: 12px;\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-flex: 1;\\n      -ms-flex: 1 1 6%;\\n          flex: 1 1 6%; }\\n\\n:host-context(.ng2-dropdown-button--icon) .ng2-dropdown-button {\\n  border: none;\\n  min-width: 40px;\\n  width: 40px;\\n  border-radius: 100%;\\n  -webkit-transition: all 0.2s;\\n  transition: all 0.2s;\\n  text-align: center;\\n  height: 40px;\\n  padding: 0.5em; }\\n\\n:host-context(.ng2-dropdown-button--icon) .ng2-dropdown-button:active {\\n  background: rgba(0, 0, 0, 0.2); }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/modules/components/button/style.scss\n// module id = 5\n// module chunks = 0","module.exports = \"<button class='ng2-dropdown-button' type=\\\"button\\\" (click)=\\\"toggleMenu()\\\" tabindex=\\\"0s\\\">\\n    <span class=\\\"ng2-dropdown-button__label\\\">\\n        <ng-content></ng-content>\\n    </span>\\n\\n    <span class=\\\"ng2-dropdown-button__caret\\\" *ngIf=\\\"showCaret\\\">\\n        <svg enable-background=\\\"new 0 0 32 32\\\" height=\\\"16px\\\" id=\\\"Слой_1\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 32 32\\\" width=\\\"16px\\\" xml:space=\\\"preserve\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"><path d=\\\"M24.285,11.284L16,19.571l-8.285-8.288c-0.395-0.395-1.034-0.395-1.429,0  c-0.394,0.395-0.394,1.035,0,1.43l8.999,9.002l0,0l0,0c0.394,0.395,1.034,0.395,1.428,0l8.999-9.002  c0.394-0.395,0.394-1.036,0-1.431C25.319,10.889,24.679,10.889,24.285,11.284z\\\" fill=\\\"#121313\\\" id=\\\"Expand_More\\\"/><g/><g/><g/><g/><g/><g/></svg>\\n    </span>\\n</button>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/modules/components/button/template.html\n// module id = 6\n// module chunks = 0","import {\n    Component,\n    ElementRef,\n    Renderer,\n    ContentChildren,\n    QueryList,\n    Input,\n    trigger,\n    style,\n    transition,\n    animate,\n    state\n} from '@angular/core';\n\nimport { ACTIONS, arrowKeysHandler } from './actions';\n\nimport { Ng2MenuItem } from '../menu-item/ng2-menu-item';\nimport { DropdownStateService } from '../../services/dropdown-state.service';\n\n@Component({\n    selector: 'ng2-dropdown-menu',\n    styleUrls: [ './style.scss' ],\n    templateUrl: './template.html',\n    animations: [\n        trigger('fade', [\n            state('visible', style({\n                maxHeight: '400px',\n                opacity: 1\n            })),\n            state('hidden', style({\n                maxHeight: '0',\n                opacity: 0\n            })),\n            transition('visible => hidden', [\n                animate('250ms ease-out')\n            ]),\n            transition('hidden => visible', [\n                animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n            ])\n        ])\n    ]\n})\nexport class Ng2DropdownMenu {\n    // possible values: 2, 4, 6\n    @Input() public width: number = 4;\n    @Input() public focusFirstElement: boolean = true;\n    @Input() public offset: string;\n\n    /**\n     * @name items\n     * @type {QueryList<Ng2MenuItem>}\n     */\n    @ContentChildren(Ng2MenuItem) public items: QueryList<Ng2MenuItem>;\n\n    private position: ClientRect;\n    private listener;\n\n    constructor(public state: DropdownStateService,\n                private element: ElementRef,\n                private renderer: Renderer) {}\n\n    /**\n     * @name show\n     * @shows menu and selects first item\n     */\n    public show(): void {\n        this.renderer.setElementStyle(this.getMenuElement(), 'display', 'block');\n\n        // update state\n        this.state.menuState.isVisible = true;\n\n        // select first item unless user disabled this option\n        if (this.focusFirstElement) {\n            this.state.dropdownState.select(this.items.first, false);\n        }\n\n        window.addEventListener('keydown', arrowKeysHandler, false);\n    }\n\n    /**\n     * @name hide\n     * @desc hides menu\n     */\n    public hide(): void {\n        this.state.menuState.isVisible = false;\n\n        this.renderer.setElementStyle(this.getMenuElement(), 'display', 'none');\n\n        // reset selected item state\n        this.state.dropdownState.unselect();\n\n        window.removeEventListener('keydown', arrowKeysHandler, false);\n    }\n\n    /**\n     * @name updatePosition\n     * @desc updates the menu position every time it is toggled\n     * @param position {ClientRect}\n     */\n    public updatePosition(position: ClientRect): void {\n        this.position = position;\n        this.ngDoCheck();\n    }\n\n    /**\n     * @name handleKeypress\n     * @desc executes functions on keyPress based on the key pressed\n     * @param $event\n     */\n    public handleKeypress($event): void {\n        if (this.state.menuState.isVisible === false) {\n            return;\n        }\n\n        const key = $event.keyCode,\n            items = this.items.toArray(),\n            index = items.indexOf(this.state.dropdownState.selectedItem);\n\n        if (!ACTIONS.hasOwnProperty(key)) {\n            return;\n        }\n\n        ACTIONS[key].call(this, index, items, this.state.dropdownState);\n\n        $event.preventDefault();\n        $event.stopPropagation();\n    }\n\n    /**\n     * @name getMenuElement\n     * @returns {Element}\n     */\n    private getMenuElement(): Element {\n        return this.element.nativeElement.children[0];\n    }\n\n    /**\n     * @name calcPositionOffset\n     * @param position\n     * @returns {{top: string, left: string}}\n     */\n    private calcPositionOffset(position): { top: string, left: string } {\n        if (!position) {\n            return;\n        }\n\n        var supportPageOffset = window.pageXOffset !== undefined;\n        var isCSS1Compat = ((document.compatMode || '') === 'CSS1Compat');\n\n        let x = supportPageOffset ? window.pageXOffset : isCSS1Compat ?\n            document.documentElement.scrollLeft : document.body.scrollLeft;\n        let y = supportPageOffset ? window.pageYOffset : isCSS1Compat ?\n            document.documentElement.scrollTop : document.body.scrollTop;\n\n        let { top, left } = this.applyOffset(\n            `${position.top + y - 15}px`,\n            `${position.left + x - 5}px`\n        );\n\n        const element = this.getMenuElement(),\n            clientWidth = element.clientWidth,\n            clientHeight = element.clientHeight,\n\n            marginFromBottom = parseInt(top) + clientHeight,\n            marginFromRight = parseInt(left) + clientWidth,\n\n            windowScrollHeight = window.innerHeight + window.scrollY,\n            windowScrollWidth = window.innerWidth + window.scrollX;\n\n        if (marginFromBottom >= windowScrollHeight) {\n            top = `${parseInt(top.replace('px', '')) - clientHeight}px`;\n        }\n\n        if (marginFromRight >= windowScrollWidth) {\n            const marginRight = marginFromRight - windowScrollWidth + 30;\n            left = `${parseInt(left.replace('px', '')) - marginRight}px`;\n        }\n\n        return { top, left };\n    }\n\n    private applyOffset(top: string, left: string): { top: string, left: string } {\n        if (!this.offset) {\n            return { top, left };\n        }\n\n        const offset = this.offset.split(' ');\n\n        if (!offset[1]) {\n            offset[1] = '0';\n        }\n\n        top = `${parseInt(top.replace('px', '')) + parseInt(offset[0])}px`;\n        left = `${parseInt(left.replace('px', '')) + parseInt(offset[1])}px`;\n\n        return { top, left };\n    }\n\n    ngOnInit() {\n        // append menu element to the body\n        const body = document.querySelector('body');\n        body.appendChild(this.element.nativeElement);\n\n        this.listener = this.renderer.listen(body, 'keyup', this.handleKeypress.bind(this));\n    }\n\n    ngDoCheck() {\n        if (this.state.menuState.isVisible && this.position) {\n            const element = this.getMenuElement();\n            const position = this.calcPositionOffset(this.position);\n\n            if (position) {\n                this.renderer.setElementStyle(element, 'top', position.top);\n                this.renderer.setElementStyle(element, 'left', position.left);\n            }\n        }\n    }\n\n    ngOnDestroy() {\n        const elem = this.element.nativeElement;\n        elem.parentNode.removeChild(elem);\n\n        if (this.listener) {\n            this.listener();\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/modules/components/menu/ng2-dropdown-menu.ts","import { Ng2MenuItem } from '../menu-item/ng2-menu-item';\nimport { Ng2DropdownState } from '../../services/ng2-dropdown-state';\n\nconst KEYS = {\n    BACKSPACE: 9,\n    PREV: 38,\n    NEXT: 40\n};\n\nconst onSwitchNext = (index: number, items: Ng2MenuItem[], state: Ng2DropdownState) => {\n    if (index < items.length - 1) {\n        state.select(items[index + 1], true);\n    }\n};\n\nconst onSwitchPrev = (index: number, items: Ng2MenuItem[], state: Ng2DropdownState) => {\n    if (index > 0) {\n        state.select(items[index - 1], true);\n    }\n};\n\nconst onBackspace = (index: number, items: Ng2MenuItem[], state: Ng2DropdownState) => {\n    if (index < items.length - 1) {\n        state.select(items[index + 1], true);\n    } else {\n        state.select(items[0], true);\n    }\n};\n\nexport const ACTIONS = {\n    [KEYS.BACKSPACE]: onBackspace,\n    [KEYS.PREV]: onSwitchPrev,\n    [KEYS.NEXT]: onSwitchNext\n};\n\nexport function arrowKeysHandler(event): void {\n    if ([38, 40].indexOf(event.keyCode) > -1) {\n        event.preventDefault();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/modules/components/menu/actions.ts","import {\n    Component,\n    Input,\n    Renderer,\n    ElementRef\n} from '@angular/core';\n\nimport { DropdownStateService } from '../../services/dropdown-state.service';\n\n@Component({\n    selector: 'ng2-menu-item',\n    styleUrls: [ './style.scss' ],\n    templateUrl: './template.html'\n})\nexport class Ng2MenuItem {\n    /**\n     * @preventClose\n     * @desc if true, clicking on the item won't close the dropdown\n     * @type {boolean}\n     */\n    @Input() public preventClose: boolean = false;\n\n    /**\n     * @name value\n     * @desc any value associated to the item\n     * @type {any}\n     */\n    @Input() public value: any;\n\n    constructor(private state: DropdownStateService,\n                private element: ElementRef,\n                private renderer: Renderer) {}\n\n    /**\n     * @name isSelected\n     * @desc returns current selected item\n     * @returns {boolean}\n     */\n    public get isSelected(): boolean {\n        return this === this.state.dropdownState.selectedItem;\n    }\n\n    /**\n     * @name click\n     * @desc emits select event\n     */\n    public select($event?): void {\n        this.state.dropdownState.select(this, true);\n        if ($event) {\n            $event.stopPropagation();\n            $event.preventDefault();\n        }\n    }\n\n    /**\n     * @name click\n     * @desc emits click event\n     */\n    public click(): void {\n        this.state.dropdownState.onItemClicked.emit(this);\n    }\n\n    /**\n     * @name focus\n     */\n    public focus() {\n        this.renderer.invokeElementMethod(this.element.nativeElement.children[0], 'focus', []);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/modules/components/menu-item/ng2-menu-item.ts","import { Injectable } from '@angular/core';\nimport { Ng2DropdownState } from './ng2-dropdown-state';\n\n@Injectable()\nexport class DropdownStateService {\n    public menuState = {\n        isVisible: <boolean>false,\n        toString(): string {\n            return this.isVisible === true ? 'visible' : 'hidden';\n        }\n    };\n\n    public dropdownState: Ng2DropdownState = new Ng2DropdownState();\n}\n\n\n\n// WEBPACK FOOTER //\n// src/modules/services/dropdown-state.service.ts","import { EventEmitter } from '@angular/core';\nimport { Ng2MenuItem } from '../components/menu-item/ng2-menu-item';\n\nexport class Ng2DropdownState {\n    public onItemSelected: EventEmitter<Ng2MenuItem> = new EventEmitter<Ng2MenuItem>();\n    public onItemClicked: EventEmitter<Ng2MenuItem> = new EventEmitter<Ng2MenuItem>();\n    private _selectedItem: Ng2MenuItem;\n\n    /**\n     * @name selectedItem\n     * @desc getter for _selectedItem\n     * @returns {Ng2MenuItem}\n     */\n    public get selectedItem(): Ng2MenuItem {\n        return this._selectedItem;\n    }\n\n    /**\n     * @name selects a menu item and emits event\n     * @param item {Ng2MenuItem}\n     * @param dispatchEvent {boolean}\n     */\n    public select(item: Ng2MenuItem, dispatchEvent = true): void {\n        this._selectedItem = item;\n\n        if (!dispatchEvent) {\n            return;\n        }\n\n        item.focus();\n        this.onItemSelected.emit(item);\n    }\n\n    /**\n     * @name unselect\n     * @desc sets _selectedItem as undefined\n     */\n    public unselect(): void {\n        this._selectedItem = undefined;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/modules/services/ng2-dropdown-state.ts","module.exports = \".ng2-menu-item {\\n  font-family: \\\"Roboto\\\", \\\"Helvetica Neue\\\", Helvetica, Arial;\\n  padding: 0.3em 1.25rem;\\n  background: #fff;\\n  color: rgba(0, 0, 0, 0.87);\\n  cursor: pointer;\\n  font-size: 0.9em;\\n  text-transform: none;\\n  font-weight: 400;\\n  -webkit-transition: background 0.2s;\\n  transition: background 0.2s;\\n  letter-spacing: 0.03em;\\n  height: 48px;\\n  line-height: 48px;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n  overflow-x: hidden; }\\n\\n.ng2-menu-item--selected {\\n  background: rgba(158, 158, 158, 0.2);\\n  outline: 0; }\\n\\n.ng2-menu-item:focus {\\n  outline: 0; }\\n\\n.ng2-menu-item:active {\\n  background: rgba(158, 158, 158, 0.4); }\\n\\n:host(ng2-menu-item) /deep/ [ng2-menu-item-icon] {\\n  vertical-align: middle;\\n  font-size: 28px;\\n  width: 1.5em;\\n  height: 30px;\\n  color: rgba(0, 0, 0, 0.44); }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/modules/components/menu-item/style.scss\n// module id = 12\n// module chunks = 0","module.exports = \"<div class='ng2-menu-item'\\n     [attr.tabindex]=\\\"0\\\"\\n     [class.ng2-menu-item--selected]=\\\"isSelected\\\"\\n     [attr.role]=\\\"button\\\"\\n     (keydown.enter)=\\\"click()\\\"\\n     (click)=\\\"click()\\\"\\n     (mouseover)=\\\"select()\\\">\\n        <ng-content></ng-content>\\n</div>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/modules/components/menu-item/template.html\n// module id = 13\n// module chunks = 0","module.exports = \".ng2-dropdown-menu-container {\\n  position: absolute;\\n  z-index: 100;\\n  overflow-y: auto;\\n  visibility: hidden;\\n  box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.3);\\n  width: 0;\\n  -webkit-transition: width 0.5s;\\n  transition: width 0.5s;\\n  background: #fff; }\\n\\n.ng2-dropdown-menu-container--open {\\n  visibility: visible; }\\n\\n.ng2-dropdown-menu-container--2 {\\n  width: 180px; }\\n\\n.ng2-dropdown-menu-container--4 {\\n  width: 250px; }\\n\\n.ng2-dropdown-menu-container--6 {\\n  width: 320px; }\\n\\n.ng2-dropdown-menu-container:focus {\\n  outline: 0;\\n  box-shadow: 0 2px 3px 0 rgba(0, 0, 0, 0.3); }\\n\\n.ng2-dropdown-menu {\\n  position: relative;\\n  padding: 0.5em 0;\\n  background: #fff;\\n  border-radius: 2px;\\n  max-height: 400px;\\n  display: block; }\\n\\n.ng2-dropdown-menu * {\\n  opacity: 0;\\n  -webkit-transition: opacity 0.5s;\\n  transition: opacity 0.5s; }\\n\\n.ng2-dropdown-menu-container.ng2-dropdown-menu-container--open * {\\n  opacity: 1; }\\n\\n.ng2-dropdown-backdrop {\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  height: 100%;\\n  z-index: 1; }\\n\\n:host /deep/ .ng2-menu-divider {\\n  height: 1px;\\n  min-height: 1px;\\n  max-height: 1px;\\n  width: 100%;\\n  display: block;\\n  background: #f9f9f9; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/modules/components/menu/style.scss\n// module id = 14\n// module chunks = 0","module.exports = \"<!-- CONTAINER -->\\n<div class=\\\"ng2-dropdown-menu-container ng2-dropdown-menu-container--{{ width }}\\\"\\n     [class.ng2-dropdown-menu-container--open]=\\\"state.menuState.isVisible\\\"\\n     [@fade]=\\\"state.menuState.toString()\\\"\\n     tabindex=\\\"-1\\\">\\n\\n    <!-- MENU -->\\n    <div class='ng2-dropdown-menu'>\\n        <ng-content></ng-content>\\n    </div>\\n</div>\\n\\n<!-- BACKDROP -->\\n<div class=\\\"ng2-dropdown-backdrop\\\" *ngIf=\\\"state.menuState.isVisible\\\" (click)=\\\"hide()\\\"></div>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/modules/components/menu/template.html\n// module id = 15\n// module chunks = 0","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/modules/components/dropdown/style.scss\n// module id = 16\n// module chunks = 0","module.exports = \"<div class=\\\"ng2-dropdown-container\\\">\\n    <ng-content select=\\\"ng2-dropdown-button\\\"></ng-content>\\n    <ng-content select=\\\"ng2-dropdown-menu\\\"></ng-content>\\n</div>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/modules/components/dropdown/template.html\n// module id = 17\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_18__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@angular/common\"\n// module id = 18\n// module chunks = 0 1"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACtCA;;;;;;;;;;;;;;;;;ACAA;AA2BA;AA1BA;AA2BA;AA1BA;AA4BA;AA3BA;AA0BA;AAxBA;AACA;AACA;AAwBA;AAPA;AAAA;AAAA;AAfA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AACA;AAAA;AAAA;AAQA;;;;;;;;;;;;;;;;AChCA;AASA;AACA;AACA;AAQA;AAaA;AAAA;AARA;AAGA;AACA;AACA;AACA;AAEA;AAMA;AAAA;AACA;AACA;AAMA;AACA;AACA;AACA;AAOA;AAAA;AACA;AAGA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAvEA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAEA;AAAA;;AAAA;AAGA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAqCA;AAAA;;;;AAAA;AAtDA;AAAA;AACA;AACA;AACA;AACA;AACA;;AAAA;AA2EA;AAAA;AA1EA;;;;;;;ACnBA;;;;;;;;;;;;;;;;ACAA;AAaA;AAIA;AAAA;AAHA;AACA;AAEA;AAMA;AACA;AACA;AAOA;AACA;AACA;AApBA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAPA;AAAA;AACA;AACA;AACA;AACA;;AAAA;AAuBA;AAAA;AAtBA;;;;;;;ACbA;;;;;;ACAA;;;;;;;;;;;;;;;;ACAA;AAcA;AAEA;AACA;AAyBA;AAeA;AAAA;AACA;AACA;AAfA;AACA;AAcA;AAMA;AACA;AAGA;AAGA;AACA;AACA;AAEA;AACA;AAMA;AACA;AAEA;AAGA;AAEA;AACA;AAOA;AACA;AACA;AACA;AAOA;AACA;AACA;AACA;AAEA;AAIA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAMA;AACA;AACA;AAOA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAKA;AAUA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AArLA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAMA;AAAA;;AAAA;AAjCA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAyLA;AAAA;AAxLA;;;;;;;;ACvCA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;;;;;;;;;;;;;;;;;;ACnCA;AAOA;AAOA;AAeA;AAAA;AACA;AACA;AAXA;AAWA;AAOA;AAAA;AACA;AACA;;;AAAA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AAKA;AACA;AACA;AA/CA;AAAA;;AAAA;AAOA;AAAA;;AAAA;AAlBA;AAAA;AACA;AACA;AACA;AACA;;AAAA;AAuDA;AAAA;AAtDA;;;;;;;;;;;;;;;;;ACdA;AACA;AAGA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAVA;AAAA;;AAAA;AAUA;AAAA;AATA;;;;;;;;ACJA;AAGA;AAAA;AACA;AACA;AAmCA;AA3BA;AAAA;AACA;AACA;;;AAAA;AAOA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAMA;AACA;AACA;AACA;AAAA;AArCA;;;;;;;ACHA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;","sourceRoot":""}